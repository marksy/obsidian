/*!
 * obsidian
 * dashboard type of thing
 * http://marksy.com
 * @author marksy
 * @version 0.1
 * Copyright 2015. MIT licensed.
 */
'use strict';
// Source: src/js/app.js
//app
(function() {
	var app = angular.module('app',
	[
		'ngRoute'
	])
	.config(['$routeProvider', '$locationProvider', '$httpProvider', function($routeProvider, $locationProvider, $httpProvider){
		$routeProvider
			.when('/home', {
				templateUrl: 'views/home.html',
				controller: 'HomeController'
			})
			.when('/weather', {
				templateUrl: 'views/weather.html',
				controller: 'WeatherController'
			})
			.when('/tfl', {
				templateUrl: 'views/tfl.html',
				controller: 'TFLController'
			})
			.when('/strava', {
				templateUrl: 'views/strava.html',
				controller: 'StravaController'
			})
			.when('/stocks', {
				templateUrl: 'views/stocks.html',
				controller: 'StocksController'
			})
			.when('/config', {
				templateUrl: 'views/config.html',
				controller: 'ConfigController'
			})
			.otherwise({redirectTo: '/home'});
	}]);
})();
// Source: src/js/base.js
function beerOClock(d,h,m) {
	var beer = new Date();
	
	beer.setDate(d);
	beer.setHours(h);
	beer.setMinutes(m);
	
	var today = new Date();
	var day = today.getDay();
	var hour = today.getHours();
	var minutes = today.getMinutes();
	
	var beerDay = beer.getDay();
	var beerHour = beer.getHours();
	var beerMinutes = beer.getMinutes();

	var daysTil = 0;
	 
	if (day === beerDay) {
		console.log((beerHour - hour) + 'hrs, ' + (60 - minutes) + 'mins until Beer O\'Clock');
		//return false
	}
	if (day <= (beerDay-1)) {
		daysTil = beerDay-day;
		console.log(daysTil + ' days, ' + (beerHour - hour) + 'hrs, ' + ((60 - minutes) + beerMinutes) + 'mins until Beer O\'Clock');
		//return false
	}
	else {
		daysTil = (day-beerDay) + beerDay;
		console.log(daysTil + ' days, ' + (beerHour - hour) + 'hrs, ' + (60 - minutes + beerMinutes) + 'mins until Beer O\'Clock');
	}

	
}

beerOClock(5,17,20);



// Source: src/js/config.js
//config settings
var HTTP_STATUS_CODES = {
	'CODE_200': 'OK',
	'CODE_201': 'Created',
	'CODE_202': 'Accepted',
	'CODE_203': 'Non-Authoritative Information',
	'CODE_204': 'No Content',
	'CODE_205': 'Reset Content',
	'CODE_206': 'Partial Content',
	'CODE_300': 'Multiple Choices',
	'CODE_301': 'Moved Permanently',
	'CODE_302': 'Found',
	'CODE_303': 'See Other',
	'CODE_304': 'Not Modified',
	'CODE_305': 'Use Proxy',
	'CODE_307': 'Temporary Redirect',
	'CODE_400': 'Bad Request',
	'CODE_401': 'Unauthorized',
	'CODE_402': 'Payment Required',
	'CODE_403': 'Forbidden',
	'CODE_404': 'Not Found',
	'CODE_405': 'Method Not Allowed',
	'CODE_406': 'Not Acceptable',
	'CODE_407': 'Proxy Authentication Required',
	'CODE_408': 'Request Timeout',
	'CODE_409': 'Conflict',
	'CODE_410': 'Gone',
	'CODE_411': 'Length Required',
	'CODE_412': 'Precondition Failed',
	'CODE_413': 'Request Entity Too Large',
	'CODE_414': 'Request-URI Too Long',
	'CODE_415': 'Unsupported Media Type',
	'CODE_416': 'Requested Range Not Satisfiable',
	'CODE_417': 'Expectation Failed',
	'CODE_500': 'Internal Server Error',
	'CODE_501': 'Not Implemented',
	'CODE_502': 'Bad Gateway',
	'CODE_503': 'Service Unavailable',
	'CODE_504': 'Gateway Timeout',
	'CODE_505': 'HTTP Version Not Supported',
	getMessage: function (status) {
		var code = 'CODE_'.concat(status);

		if (HTTP_STATUS_CODES[code]) {
			return HTTP_STATUS_CODES[code];
		} else {
			return '';
		}
	}
};

// clock

// twitter
var	tweet,
	twtDate,
	twtUsername,
	twtUserImg,
	twtText;
	var updateMinutes = (1000*60)*4;

//weather
var weatherKey = '08c33162-6e48-4b98-bfe7-38ccaae9c53d';
var weatherUrl = 'http://datapoint.metoffice.gov.uk/public/data/val/wxfcs/all/json/3772?res=3hourly&key='+weatherKey;

var weatherCodes = {
	'0':	'Clear night',
	'1':	'Sunny day',
	'2':	'Partly cloudy (night)',
	'3':	'Partly cloudy (day)',
	'4':	'Not used',
	'5':	'Mist',
	'6':	'Fog',
	'7':	'Cloudy',
	'8':	'Overcast',
	'9':	'Light rain shower (night)',
	'10':	'Light rain shower (day)',
	'11':	'Drizzle',
	'12':	'Light rain',
	'13':	'Heavy rain shower (night)',
	'14':	'Heavy rain shower (day)',
	'15':	'Heavy rain',
	'16':	'Sleet shower (night)',
	'17':	'Sleet shower (day)',
	'18':	'Sleet',
	'19':	'Hail shower (night)',
	'20':	'Hail shower (day)',
	'21':	'Hail',
	'22':	'Light snow shower (night)',
	'23':	'Light snow shower (day)',
	'24':	'Light snow',
	'25':	'Heavy snow shower (night)',
	'26':	'Heavy snow shower (day)',
	'27':	'Heavy snow',
	'28':	'Thunder shower (night)',
	'29':	'Thunder shower (day)',
	'30':	'Thunder'
};

//tfl
//var tflKey = '2a45b9bd5d4a3699ccc79338d8bec6e7'; stupid TFL doesnt event support JSON so let's use something else:
var tflUrl = 'http://labs.coruscantconsulting.co.uk/tube/api/lines.php?callback=JSON';


//strava
var stravaAT = '54b0e167486e9e58b52d9b1a73b5471e24c5cf58';
var stravaUrl = 'https://www.strava.com/api/v3/athlete/activities?access_token=' + stravaAT + '&callback=JSON_CALLBACK';


var taliwacker = null ;

//stocks GBP v NZD
// openexchange

var exchangeAppId = 'af3688c987aa4f4faa7740671a0f632e';
var exchangeBaseUrl = 'https://openexchangerates.org/api/';
var exchangeQuery = '?app_id=';
var exchangeAPIlatest = 'latest.json',
	exchangeAPIhistory = 'historical/YYYY-MM-DD.json',
	exchangeAPIcurrencies = 'currencies.json',
	exchangeAPItime = 'time-series.json';
	
	console.log('exchange latest: ' + exchangeBaseUrl+exchangeAPIlatest+exchangeQuery+exchangeAppId);
	console.log('exchangeAPIhistory: ' + exchangeBaseUrl+exchangeAPIhistory+exchangeQuery+exchangeAppId);
	console.log('exchangeAPIcurrencies: ' + exchangeBaseUrl+exchangeAPIcurrencies+exchangeQuery+exchangeAppId);
	console.log('exchangeAPItime: ' + exchangeBaseUrl+exchangeAPItime+exchangeQuery+exchangeAppId);

//now playing/spotify/itunes

//staff

//jira


// Source: src/js/controllers.js
//controllers
(function(){
	var app = angular.module('app');
	
	app.controller('IndexController', ['$scope', '$rootScope', function($scope,$rootScope){
		$scope.root = $rootScope;
		$scope.dateTimeFormat = 'd MMM h:mm a';
		
        $scope.root.setStatus = function (code) {
            $scope.root.status = code;
            $scope.root.message = HTTP_STATUS_CODES.getMessage(code);
            if (code == 200) {
            	$scope.root.isProcessing = false;
            }
        }

        $scope.root.setStatus(200);
		
	}]);
	
	app.controller('HeaderController', ['$scope', '$location', function($scope,$location){
		$scope.isActive = function (viewLocation) { 
			return viewLocation === $location.path();
		};
	}]);
	
	app.controller('TwtController', ['$scope', '$rootScope', function($scope,$rootScope){
		
		var ld = $('.twitter');
		var cb = new Codebird();
		
		cb.setConsumerKey('gMsM8AJwDYcxhAC4Trg326lp6', 'xgtnNetwamP1j9I1RWyqO5NNpdHw2wuUErqOaPsI8KKK4950o5');
		cb.setToken('8004102-VuDQ6ED8HZZjZMc7ScQikWlgOnCq4HKxcjLw79S4AH', 'pJ2pRW6iQDp7Aa9mVTqF8xx8RJhs5huIlWttTKLfGEdBm');
		
		var Twitter = {
			update: function() {
				//console.log('twtupdate');
				cb.__call(
				    'statuses_homeTimeline',
				    {},
				    function (data) {	
						$scope.$apply(function () {
							$scope.items = data;
							$scope.root.items = data;
							//console.log(data);
							ld.removeClass('updating');						
						});
					}
				);
			},
			later: function() {
	            setTimeout(function() {
					ld.addClass('updating');
					Twitter.update(); 
					Twitter.later();
	            }, updateMinutes);
			}
		}
		Twitter.update();
		Twitter.later();
		
		
	
	}]);
	
	app.controller('HomeController', ['$scope', '$rootScope', function($scope,$rootScope){
		$scope.root = $rootScope;
		
		console.log('HomeController');
		
	}]);
	
	app.controller('WeatherController', ['$scope', '$rootScope', '$http', function($scope,$rootScope,$http){
				
		$scope.root = $rootScope;
		
		$scope.location = 'London';
		$scope.temp = '--';
		$scope.windspeed = '--';
		$scope.rain = '--';
		$scope.type = '--';
		

		
		var Weather = {
		    update: function() {
				$http.get(weatherUrl).success(function(data,status,headers,config){
					//console.log('weather-update');
					// console.log('weather is a ' + typeof data);
					//Period[0] is today, and Rep[0] is the current segment
					$scope.temp = data.SiteRep.DV.Location.Period[0].Rep[0].T;
					$scope.windspeed = data.SiteRep.DV.Location.Period[0].Rep[0].S;
					$scope.rain = data.SiteRep.DV.Location.Period[0].Rep[0].Pp;
					$scope.typeNo = data.SiteRep.DV.Location.Period[0].Rep[0].W;
					$scope.type = weatherCodes[$scope.typeNo];
		
					//Period[1] is tomorrow and Rep[] is the 5th, 3hr segment (around about 2pm)
					$scope.tempTom = data.SiteRep.DV.Location.Period[1].Rep[4].T;
					$scope.windspeedTom = data.SiteRep.DV.Location.Period[1].Rep[4].S;
					$scope.rainTom = data.SiteRep.DV.Location.Period[1].Rep[4].Pp;
					$scope.typeNoTom = data.SiteRep.DV.Location.Period[1].Rep[4].W;
					$scope.typeTom = weatherCodes[$scope.typeNo];
		
					//console.log(data.SiteRep.DV.Location.Period[0]);
				})
				.error(function(data,status,headers,config){
					console.log('error: ' + data,status,headers,config);
				});
		    },
			later: function() {
				setTimeout(function() {
					//console.log('weather-later');
					Weather.update();
					Weather.later();
				}, 1200000);//every 20mins
			}
		}
		Weather.update();
		Weather.later();
				
	}]);
	
	app.controller('TFLController', ['$scope', '$rootScope', '$http', function($scope,$rootScope,$http){
		$scope.root = $rootScope;
		
		$http.get(tflUrl).success(function (data,status,headers,config) {
			// console.log('data: ' + data);
			if(data[0] == '<') {
				console.log('error coneccted');
				// $scope.$apply(function () {
					$scope.trains = { "trains": 
					{"LineId":"0","LineName":"TFL","StatusCode":"SD","Status":"Error","Message":"Error with connection. Most likely their data is malformed.","IsDisrupted":false,"Disruptions":[]}
					};
					
					console.log($scope.trains);
				// });
			} else {
			console.log('tfl data seems fine');
			var bisc = data.slice(6,-3);
			var lamb = JSON.parse('{"trains":[' + bisc + ']}');

			$scope.trains = lamb.trains;
			// console.log(lamb.trains);
		}

		})
		.error(function (data,status,headers,config) {
			console.log('error: ' + data);
		});
		
		console.log('TFLController');
		
	}]);
	
	app.controller('StravaController', ['$scope', '$rootScope', '$http', function($scope,$rootScope,$http){
		$scope.root = $rootScope;
		
		$http({ method: 'JSONP', url: stravaUrl }).success(function(data){
			$scope.activities = data;
		})
		.error(function(data){
			console.log('strava error: ' + data);
		});
		
		
		console.log('StravaController');
		
	}]);
	
	app.controller('StocksController', ['$scope', '$rootScope', function($scope,$rootScope){
		$scope.root = $rootScope;
		
		console.log('StocksController');
		
	}]);
	
	app.controller('ConfigController', ['$scope', '$rootScope', function($scope,$rootScope){
		$scope.root = $rootScope;
		
		console.log('ConfigController');
		
	}]);
})(); 


// Source: src/js/directives.js
(function(){
	var app = angular.module('app');

	app.directive('myCurrentTime', function(dateFilter){
	    return function(scope, element, attrs){
	        var format;
        
	        scope.$watch(attrs.myCurrentTime, function(value) {
	            format = value;
	            updateTime();
	          });
        
	        function updateTime(){
	            var dt = dateFilter(new Date(), format);
	            element.text(dt);
				$('.date-time span').html(function(){
					return $(this).html().replace(':', '<span class="flash">:</span>');
				});
			
	          }
        
	        function updateLater() {
	            setTimeout(function() {
	              updateTime(); 
	              updateLater(); 
	            }, 20000);
	          }
        
	        updateLater();
	      };
	  });
})(); 

// Source: src/js/filters.js

// Source: src/js/services.js
// 'use strict';
// //services
// (function(){
// 	var app = angular.module('app');
//
// 	app.factory('StravaActivities', function($resource) {
// 		return $resource('https://www.strava.com/api/v3/athlete/activities?access_token=' + access_token, {}, {
// 			getJSONP: {
// 				method: 'JSONP',
// 				isArray: true,
// 				params: {
// 				  callback: 'JSON_CALLBACK'
// 				}
// 			}
// 		});
// 	});
// });